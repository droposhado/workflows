name: Terraform best practices

on:
  workflow_call:
    inputs:
      dir:
        required: false
        default: .
        type: string

      apply:
        required: false
        default: false
        type: boolean

      terraform_version:
        required: false
        default: 1.4.6
        type: string

      iac_version:
        required: false
        default: 'v14'
        type: string

      policy_type:
        required: false
        default: 'all'
        type: string



      only_warn:
        required: false
        default: false
        type: boolean



      policy_path:
        required: false
        type: string

      skip_rules:
        required: false
        type: string




      verbose:
        required: false
        default: false
        type: boolean

jobs:

  terrascan:
    name: terrascan-action
    runs-on: ubuntu-latest
    steps:
    - name: Checkout repository
      uses: actions/checkout@v3

    - name: Run Terrascan
      id: terrascan
      uses: accurics/terrascan-action@main
      with:
        iac_type: 'terraform'
        iac_version: ${{ inputs.iac_version }}
        policy_type: ${{ inputs.policy_type }}
        only_warn: ${{ inputs.only_warn }}
        verbose: ${{ inputs.verbose }}
        iac_dir: ${{ inputs.dir }}
        policy_path: ${{ inputs.policy_path }}
        skip_rules: ${{ inputs.skip_rules }}

  terraform:
    name: "Terraform"
    needs:
      - terrascan
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ${{ inputs.dir }}

    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v2
        with:
          terraform_version: ${{ inputs.terraform_version }}
          cli_config_credentials_token: ${{ secrets.TF_API_TOKEN }}

      - name: Terraform Format
        run: terraform fmt -check

      - name: Terraform Init
        run: terraform init
      
      - name: Terraform Validate
        run: terraform validate -no-color

      - name: Terraform Plan
        id: plan
        if: github.ref == 'refs/heads/main' && github.event_name == 'push'
        run: terraform plan -no-color

      - name: Terraform Apply
        if: github.ref == 'refs/heads/main' && github.event_name == 'push' && inputs.apply
        run: terraform apply -auto-approve
