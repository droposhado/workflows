name: Terraform best practices

on:
  workflow_call:
    inputs:
      dir:
        required: false
        default: .
        type: string

      terraform_version:
        required: false
        default: 1.5.4
        type: string

      iac_version:
        required: false
        default: 'v15'
        type: string

      policy_type:
        required: false
        default: 'all'
        type: string


      tflint_version:
        required: false
        default: 'v0.44.1'
        type: string


      only_warn:
        required: false
        default: false
        type: boolean



      policy_path:
        required: false
        type: string

      skip_rules:
        required: false
        type: string




      verbose:
        required: false
        default: false
        type: boolean
     
    secrets:
      tf_api_token:
        required: true

jobs:

  terrascan:
    name: terrascan-action
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
  
      - name: Run Terrascan
        id: terrascan
        uses: tenable/terrascan-action@main
        with:
          iac_type: 'terraform'
          iac_version: ${{ inputs.iac_version }}
          policy_type: ${{ inputs.policy_type }}
          only_warn: ${{ inputs.only_warn }}
          verbose: ${{ inputs.verbose }}
          iac_dir: ${{ inputs.dir }}
          policy_path: ${{ inputs.policy_path }}
          skip_rules: ${{ inputs.skip_rules }}

  tflint:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3
        name: Checkout source code

      - uses: actions/cache@v3
        name: Cache plugin dir
        with:
          path: ~/.tflint.d/plugins
          key: ubuntu-latest-tflint-${{ hashFiles('.tflint.hcl') }}

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v2
        with:
          terraform_version: ${{ inputs.terraform_version }}
          cli_config_credentials_token: ${{ secrets.tf_api_token }}

      - name: Terraform Init
        working-directory: ${{ inputs.dir }}
        run: terraform init

      - uses: terraform-linters/setup-tflint@v3
        name: Setup TFLint
        with:
          tflint_version: ${{ inputs.tflint_version }}

      - name: Show version
        working-directory: ${{ inputs.dir }}
        run: tflint --version

      - name: Init TFLint
        run: tflint --init
        working-directory: ${{ inputs.dir }}
        env:
          # https://github.com/terraform-linters/tflint/blob/master/docs/user-guide/plugins.md#avoiding-rate-limiting
          GITHUB_TOKEN: ${{ github.token }}

      - name: Run TFLint
        working-directory: ${{ inputs.dir }}
        continue-on-error: true
        id: tflint_run
        run: tflint -f sarif > results.sarif

      - name: Upload SARIF file
        uses: github/codeql-action/upload-sarif@v2
        with:
          # Path to SARIF file relative to the root of the repository
          sarif_file: results.sarif
          # Optional category for the results
          # Used to differentiate multiple results for one commit
          category: tflint

      - name: Force status before upload
        if: steps.tflint_run.outcome != 'success'
        run: exit 1

  terraform-native:
    name: "Terraform"
    needs:
      - terrascan
      - tflint
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v2
        with:
          terraform_version: ${{ inputs.terraform_version }}
          cli_config_credentials_token: ${{ secrets.tf_api_token }}

      - name: Terraform Format
        working-directory: ${{ inputs.dir }}
        run: terraform fmt -check

      - name: Terraform Init
        working-directory: ${{ inputs.dir }}
        run: terraform init
      
      - name: Terraform Validate
        working-directory: ${{ inputs.dir }}
        run: terraform validate -no-color
