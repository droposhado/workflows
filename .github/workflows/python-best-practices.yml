name: Python best practices

# I know that I could install the packages here using this workflow,
# but I prefer that each package has this as an explicit dependency
# in a file, named requirements-dev.txt

on:
  workflow_call:
    inputs:
      context:
        required: false
        default: .
        type: string
      python_version:
        required: true
        type: string

jobs:

  python-best-practices: 
    runs-on: ubuntu-latest
    permissions:
      contents: read
    strategy:
      matrix:
        name:
          - bandit
          - ruff
          - liccheck
          - isort
          - pylint

        include: 
          - name: bandit
            cmd: bandit -v -r ${{ inputs.context }} -c pyproject.toml

          - name: ruff
            cmd: ruff check ${{ inputs.context }}

          - name: liccheck
            cmd: liccheck

          - name: isort
            cmd: isort ${{ inputs.context }}

          - name: pylint
            cmd: pylint -j $(nproc) --recursive=y ${{ inputs.context }}

    steps:

      - name: checkout repo
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: "${{ inputs.python_version }}"

      # nproc dependency block

      - name: nproc dependency install
        if: matrix.name == 'pylint'
        run: |
          sudo apt-get update -qq
          sudo apt-get install coreutils

      - name: flit install
        run: pip install flit

      # requirements.txt block

      - name: Check file existence
        id: check_requirement_file
        uses: andstor/file-existence-action@v2
        with:
          files: "requirements.txt"

      - name: Install requirements.txt deps
        if: steps.check_requirement_file.outputs.files_exists == 'true'
        run: pip install -U -r ${{ inputs.context }}/requirements.txt

      # requirements-dev.txt block

      - name: Check file existence
        id: check_requirement_dev_file
        uses: andstor/file-existence-action@v2
        with:
          files: "requirements-dev.txt"

      - name: Install requirements-dev.txt deps
        if: steps.check_requirement_dev_file.outputs.files_exists == 'true'
        run: pip install -U -r ${{ inputs.context }}/requirements-dev.txt

      # pyproject block

      - name: Check file existence
        id: check_pyproject_file
        uses: andstor/file-existence-action@v2
        with:
          files: "pyproject.toml"

      - name: Install pyproject.toml deps
        # if requirements.txt exists, it is not necessary to use this
        if: |
          steps.check_pyproject_file.outputs.files_exists == 'true' &&
          ! steps.check_requirement_file.outputs.files_exists == 'true'

        run: |
          pip install -U -e ${{ inputs.context }}
          pip install -U ${{ inputs.context }}[test] 

      - run: ${{ matrix.cmd }}
